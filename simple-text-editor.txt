
npm run start-editor

// In your HTML file (index.html)
<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>Simple Text Editor</title>
  <style>
    body { 
      margin: 0; 
      padding: 20px; 
      display: flex;
      flex-direction: column;
      height: 100vh;
    }
    #editor-container {
      display: flex;
      flex-direction: column;
      flex-grow: 1;
    }
    #toolbar {
      padding: 5px 0;
      margin-bottom: 10px;
    }
    #editor {
      width: 100%;
      flex-grow: 1;
      resize: none;
      font-family: monospace;
      padding: 10px;
      box-sizing: border-box;
      border: 1px solid #ddd;
      outline: none;
      font-size: 14px;
      line-height: 1.5;
    }
    .status-bar {
      border: 1px solid #ddd;
      border-top: 0;
      padding: 5px;
      font-size: 12px;
      font-family: monospace;
      display: flex;
      justify-content: space-between;
    }
  </style>
</head>
<body>
  <div id="editor-container">
    <div id="toolbar">
      <button id="btnSave">Save</button>
      <button id="btnClear">Clear</button>
      <select id="fontSize">
        <option value="12">12px</option>
        <option value="14" selected>14px</option>
        <option value="16">16px</option>
        <option value="18">18px</option>
      </select>
      <input type="checkbox" id="wordWrap" checked>
      <label for="wordWrap">Word Wrap</label>
    </div>
    <textarea id="editor" spellcheck="false">// Start typing here...</textarea>
    <div class="status-bar">
      <span id="position">Line: 1, Column: 1</span>
      <span id="statistics">Characters: 0</span>
    </div>
  </div>

  <script src="renderer.js"></script>
</body>
</html>

// In your renderer process file (renderer.js)
const editor = document.getElementById('editor')
const positionDisplay = document.getElementById('position')
const statsDisplay = document.getElementById('statistics')
const saveButton = document.getElementById('btnSave')
const clearButton = document.getElementById('btnClear')
const fontSizeSelect = document.getElementById('fontSize')
const wordWrapCheckbox = document.getElementById('wordWrap')

// Initialize editor
function initEditor() {
  // Set up tab key behavior
  editor.addEventListener('keydown', function(e) {
    if (e.key === 'Tab') {
      e.preventDefault()
      
      // Insert a tab at cursor position
      const start = this.selectionStart
      const end = this.selectionEnd
      
      this.value = this.value.substring(0, start) + 
                    "  " + 
                    this.value.substring(end)
      
      // Put cursor after the inserted tab
      this.selectionStart = this.selectionEnd = start + 2
    }
  })
  
  // Update the cursor position and stats display
  editor.addEventListener('keyup', updatePositionAndStats)
  editor.addEventListener('click', updatePositionAndStats)
  
  // Initial update
  updatePositionAndStats()
}

// Update the position and statistics displays
function updatePositionAndStats() {
  const text = editor.value
  
  // Get cursor position
  const cursorPos = editor.selectionStart
  
  // Calculate line and column
  const lines = text.substr(0, cursorPos).split('\n')
  const lineNumber = lines.length
  const columnNumber = lines[lines.length - 1].length + 1
  
  // Update displays
  positionDisplay.textContent = `Line: ${lineNumber}, Column: ${columnNumber}`
  statsDisplay.textContent = `Characters: ${text.length}`
}

// Handle save button
saveButton.addEventListener('click', function() {
  // This is where you'd implement the save functionality
  // In Electron, you might use the dialog module to show a save dialog
  console.log('Save button clicked')
  alert('Content would be saved here in a real app')
})

// Handle clear button
clearButton.addEventListener('click', function() {
  if (confirm('Clear the editor?')) {
    editor.value = ''
    updatePositionAndStats()
  }
})

// Handle font size changes
fontSizeSelect.addEventListener('change', function() {
  editor.style.fontSize = `${this.value}px`
})

// Handle word wrap toggle
wordWrapCheckbox.addEventListener('change', function() {
  editor.style.whiteSpace = this.checked ? 'pre-wrap' : 'pre'
})

// Get editor content
function getEditorContent() {
  return editor.value
}

// Set editor content
function setEditorContent(content) {
  editor.value = content
  updatePositionAndStats()
}

// Initialize the editor when the document is ready
document.addEventListener('DOMContentLoaded', initEditor)
